name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-node:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint
    
    - name: Run tests
      run: npm run test
    
    - name: Build packages
      run: npm run build

  test-go:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Install dependencies
      working-directory: ./packages/cli
      run: go mod tidy
    
    - name: Run tests
      working-directory: ./packages/cli
      run: go test -v ./...
    
    - name: Run linter
      working-directory: ./packages/cli
      run: go vet ./...
    
    - name: Build CLI
      working-directory: ./packages/cli
      run: go build -v .

  build-extension:
    runs-on: ubuntu-latest
    needs: test-node
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build extension
      run: |
        cd packages/shared && npm run build
        cd ../extension && npm run build
    
    - name: Package extension
      run: |
        cd packages/extension/dist
        zip -r ../ai-form-filler-extension.zip .
    
    - name: Upload extension artifact
      uses: actions/upload-artifact@v3
      with:
        name: chrome-extension
        path: packages/extension/ai-form-filler-extension.zip

  build-cli:
    runs-on: ubuntu-latest
    needs: test-go
    
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Build CLI
      working-directory: ./packages/cli
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        if [ "$GOOS" = "windows" ]; then
          go build -o ai-form-filler-${{ matrix.goos }}-${{ matrix.goarch }}.exe
        else
          go build -o ai-form-filler-${{ matrix.goos }}-${{ matrix.goarch }}
        fi
    
    - name: Upload CLI artifact
      uses: actions/upload-artifact@v3
      with:
        name: cli-${{ matrix.goos }}-${{ matrix.goarch }}
        path: packages/cli/ai-form-filler-*