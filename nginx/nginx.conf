# KprCli Nginx Configuration
# Reverse proxy with host computer session tracking for production client deployments

# Main context
worker_processes auto;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # Basic Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;
    
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Session Tracking & Host Computer Identification
    # Custom log format for host computer session tracking
    log_format session_tracking 
        '[$time_local] Host: $remote_addr '
        'Session: $cookie_session_id '
        'User-Agent: "$http_user_agent" '
        'Request: "$request" '
        'Status: $status '
        'Size: $body_bytes_sent '
        'Referer: "$http_referer" '
        'Request-ID: $request_id '
        'Upstream: $upstream_addr '
        'Response-Time: $request_time';

    # Rate Limiting - Per Host Computer
    # Zone for tracking requests per client IP (host computer)
    limit_req_zone $remote_addr zone=per_host:10m rate=10r/s;
    # Zone for tracking requests per session
    limit_req_zone $cookie_session_id zone=per_session:10m rate=20r/s;
    # Zone for API endpoints
    limit_req_zone $remote_addr zone=api_limit:10m rate=5r/s;

    # Connection Limiting - DDoS Protection
    limit_conn_zone $remote_addr zone=conn_limit_per_ip:10m;

    # Upstream Backend Configuration
    upstream kprcli_backend {
        server kprcli-web:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # SSL Configuration (ready for certificates)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Main Server Block
    server {
        listen 80;
        listen [::]:80;
        server_name localhost _;
        
        # Security Headers
        add_header X-Frame-Options SAMEORIGIN always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header X-Request-ID $request_id always;
        
        # CORS Headers for API requests
        add_header Access-Control-Allow-Origin $http_origin always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
        add_header Access-Control-Expose-Headers "Content-Length,Content-Range" always;
        add_header Access-Control-Allow-Credentials true always;

        # Session Tracking Setup
        # Generate session ID if not present
        set $session_id $cookie_session_id;
        if ($session_id = "") {
            set $session_id $request_id$remote_addr;
        }
        
        # Set session cookie for new sessions (cannot use add_header in if block)
        add_header Set-Cookie "session_id=$session_id; Path=/; HttpOnly; SameSite=Strict" always;

        # Rate Limiting Application
        limit_req zone=per_host burst=20 nodelay;
        limit_req zone=per_session burst=50 nodelay;
        limit_conn conn_limit_per_ip 50;

        # Access Logging with Session Tracking
        access_log /var/log/nginx/access.log session_tracking;
        error_log /var/log/nginx/error.log warn;

        # Health Check Endpoint for Nginx
        location /nginx-health {
            access_log off;
            return 200 "nginx healthy\n";
            add_header Content-Type text/plain;
        }

        # API Routes - Enhanced Rate Limiting
        location /api/ {
            limit_req zone=api_limit burst=10 nodelay;
            
            # Host Computer Tracking Headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            proxy_set_header X-Session-ID $session_id;
            proxy_set_header X-Client-IP $remote_addr;
            
            # Backend Connection
            proxy_pass http://kprcli_backend;
            proxy_redirect off;
            proxy_buffering off;
            proxy_cache_bypass $http_upgrade;
            
            # Timeout Configuration
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # WebSocket Support (for real-time features)
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
        }

        # Static Assets - Optimized Serving
        location /_next/static/ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            proxy_pass http://kprcli_backend;
        }

        # Main Application Routes
        location / {
            # Host Computer Session Tracking
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            proxy_set_header X-Session-ID $session_id;
            proxy_set_header X-Client-IP $remote_addr;
            
            # Device Fingerprinting Headers
            proxy_set_header X-User-Agent $http_user_agent;
            proxy_set_header X-Accept-Language $http_accept_language;
            proxy_set_header X-Accept-Encoding $http_accept_encoding;
            
            # Backend Connection
            proxy_pass http://kprcli_backend;
            proxy_redirect off;
            proxy_buffering off;
            proxy_cache_bypass $http_upgrade;
            
            # Timeout Configuration
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # WebSocket Support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
        }

        # Error Pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # HTTPS Server Block (for SSL certificates) - Commented out until certificates are available
    # server {
    #     listen 443 ssl http2;
    #     listen [::]:443 ssl http2;
    #     server_name localhost _;
    #     
    #     # SSL Certificate Configuration (to be mounted)
    #     ssl_certificate /etc/ssl/certs/kprcli.crt;
    #     ssl_certificate_key /etc/ssl/private/kprcli.key;
    #     
    #     # Enhanced Security Headers for HTTPS
    #     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    #     add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://challenges.cloudflare.com; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https:; frame-ancestors 'self';" always;
    #     
    #     # Include all configuration from HTTP block
    #     include /etc/nginx/conf.d/http-locations.conf;
    # }
}

# Stream Block for TCP/UDP Proxying (if needed for WebSocket or other services)
stream {
    # Reserved for future TCP/UDP proxying needs
}